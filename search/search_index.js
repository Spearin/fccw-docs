var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Time to RTFM!","text":""},{"location":"index.html#time-to-rtfm","title":"Time to RTFM!","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"index.html#todo","title":"TODO","text":"<ol> <li> <p>Configure Site Settings</p> <ul> <li>Setup PDF export</li> <li>Setup theme switch</li> <li>Configure Navigation</li> <li>Install Mil Symbols fonts \u2192 Build test page</li> </ul> </li> <li> <p>Convert Content</p> </li> <li>Modify and Create Content</li> </ol>"},{"location":"index.html#plugins","title":"Plugins","text":"<ul> <li><code>enumerate-headings</code> - This will automatically add numbers to each section header</li> <li><code>macros</code> - We can set and use variables yabba dabba doo</li> <li><code>live-edit</code> - Can edit the markdown pages in the browser! Will disable before going public.</li> <li><code>mermaid2</code> - Make flowcharts and diagrams with Markdown</li> <li><code>awesome-nav</code> - Reorganize the navigation</li> </ul>"},{"location":"index.html#testing","title":"Testing","text":"<ol> <li>This link to NATO should take us to the Cold War page. Keyword: Should</li> <li>We can show an enemy tank icon with <code>:en-tank:</code>, and a friendly infantry icon with <code>:fr-infantry:</code> A I</li> </ol>"},{"location":"index.html#macro-plugin-info","title":"Macro Plugin Info","text":""},{"location":"index.html#macros-plugin-environment","title":"Macros Plugin Environment","text":""},{"location":"index.html#general-list","title":"General List","text":"<p>All available variables and filters within the macros plugin:</p> Variable Type Content extra dict generator = False, test_macro = '==yabba== ^^dabba^^ **doo**', polyfills = ['https://unpkg.com/iframe-worker/shim'] config MkDocsConfig {'config_file_path': 'C:\\\\FCCW\\\\Docs\\\\mkdocs.yml', 'site_name': 'Flashpoint Campaigns Documentation', 'nav': None, 'pages': None, 'exclude_docs': None, 'draft_docs': None, 'not_in_nav': None, 'site_url': None, 'site_description': None, 'site_author': None, 'theme': Theme(name='material', dirs=['C:\\\\FCCW\\\\Docs\\\\venv\\\\Lib\\\\site-packages\\\\material\\\\templates', 'C:\\\\FCCW\\\\Docs\\\\venv\\\\Lib\\\\site-packages\\\\mkdocs\\\\templates'], static_templates={'sitemap.xml', '404.html'}, name='material', locale=Locale('en'), language='en', direction=None, features=['content.tooltips', 'navigation.tabs', 'navigation.expand', 'navigation.top', 'search.suggest', 'toc.follow', 'toc.integrate'], font={'text': 'Courier Prime', 'code': 'IBM Plex Mono'}, icon=None, favicon='assets/images/favicon.png', palette=[{'scheme': 'flashpoint', 'toggle': {'icon': 'material/brightness-7', 'name': 'Switch to dark mode'}}, {'scheme': 'slate', 'primary': 'green', 'accent': 'amber', 'toggle': {'icon': 'material/brightness-4', 'name': 'Switch to light mode'}}]), 'docs_dir': 'C:\\\\FCCW\\\\Docs\\\\docs', 'site_dir': 'C:\\\\FCCW\\\\Docs\\\\site', 'copyright': None, 'google_analytics': None, 'dev_addr': _IpAddressValue(host='127.0.0.1', port=8000), 'use_directory_urls': False, 'repo_url': None, 'repo_name': None, 'edit_uri_template': None, 'edit_uri': None, 'extra_css': ['assets/stylesheets/extra.css', 'assets/stylesheets/mil-symbols.css'], 'extra_javascript': [], 'extra_templates': [], 'markdown_extensions': ['toc', 'tables', 'fenced_code', 'meta', 'abbr', 'attr_list', 'def_list', 'md_in_html', 'admonition', 'pymdownx.critic', 'pymdownx.caret', 'pymdownx.keys', 'pymdownx.mark', 'pymdownx.tilde', 'pymdownx.smartsymbols', 'pymdownx.snippets', 'pymdownx.details', 'pymdownx.superfences', 'pymdownx.blocks.caption', 'pymdownx.tasklist', 'pymdownx.emoji', ], 'mdx_configs': {'toc': {'toc_depth': 3}, 'pymdownx.snippets': {'auto_append': ['includes/abbr.md']}, 'pymdownx.tasklist': {'custom_checkbox': True}, 'pymdownx.emoji': {'emoji_index': , 'emoji_generator': }}, 'strict': False, 'remote_branch': 'gh-pages', 'remote_name': 'origin', 'extra': {'generator': False, 'test_macro': '==yabba== ^^dabba^^ **doo**', 'polyfills': ['https://unpkg.com/iframe-worker/shim']}, 'plugins': {'material/tags': , 'material/offline': , 'material/search': , 'localsearch': , 'git-revision-date-localized': , 'mkdocs-video': , 'mermaid2': , 'awesome-nav': , 'macros': , 'autolinks': , 'autorefs': , 'enumerate-headings': , 'exporter': , 'exporter-pdf': }, 'hooks': {}, 'watch': ['C:\\\\FCCW\\\\Docs\\\\includes'], 'validation': {'nav': {'omitted_files': 20, 'not_found': 30, 'absolute_links': 20}, 'links': {'not_found': 30, 'absolute_links': 20, 'unrecognized_links': 20, 'anchors': 20}}} environment dict system = 'Windows', system_version = '10', python_version = '3.12.0', mkdocs_version = '1.6.1', macros_plugin_version = '1.3.7', jinja2_version = '3.1.6' plugin LegacyConfig {'module_name': 'main', 'modules': [], 'render_by_default': True, 'force_render_paths': '', 'include_dir': '', 'include_yaml': [], 'j2_block_start_string': '', 'j2_block_end_string': '', 'j2_variable_start_string': '', 'j2_variable_end_string': '', 'j2_comment_start_string': '', 'j2_comment_end_string': '', 'on_undefined': 'keep', 'on_error_fail': False, 'verbose': False} git dict status = True, date [datetime], short_commit = 'a2f7fcf', commit = 'a2f7fcf670d871e293cc157404d2e3957db8a160', tag = '', short_tag = '', author = 'Andrew Spearin', author_email = 'andrewspearin@gmail.com', committer = 'Andrew Spearin', committer_email = 'andrewspearin@gmail.com', date_ISO = 'Fri Jun 6 14:19:38 2025 -0400', message = 'implemented mil symbol font, created macros for mil symbols', raw = 'commit a2f7fcf670d871e293cc157404d2e3957db8a160\\nAuthor: Andrew Spearin \\nDate:   Fri Jun 6 14:19:38 2025 -0400\\n\\n    implemented mil symbol font, created macros for mil symbols', root_dir = 'C:/FCCW/Docs' generator bool False test_macro str '==yabba== ^^dabba^^ **doo**' polyfills SuperList ['https://unpkg.com/iframe-worker/shim'] macros SuperDict context [function], macros_info [function], now [function], fix_url [function] filters dict pretty [function], relative_url [function] filters_builtin dict abs [builtin_function_or_method], attr [function], batch [function], capitalize [function], center [function], count [builtin_function_or_method], d [function], default [function], dictsort [function], e [function], escape [function], filesizeformat [function], first [function], float [function], forceescape [function], format [function], groupby [function], indent [function], int [function], join [function], last [function], length [builtin_function_or_method], list [function], lower [function], items [function], map [function], min [function], max [function], pprint [function], random [function], reject [function], rejectattr [function], replace [function], reverse [function], round [function], safe [function], select [function], selectattr [function], slice [function], sort [function], string [function], striptags [function], sum [function], title [function], trim [function], truncate [function], unique [function], upper [function], urlencode [function], urlize [function], wordcount [function], wordwrap [function], xmlattr [function], tojson [function] navigation Navigation files Files page Page Page(title='Time to RTFM!', url='index.html')"},{"location":"index.html#config-information","title":"Config Information","text":"<p>Standard MkDocs configuration information. Do not try to modify.</p> <p>e.g. <code>{{ config.docs_dir }}</code></p> <p>See also the MkDocs documentation on the config object.</p> Variable Type Content config_file_path str 'C:\\\\FCCW\\\\Docs\\\\mkdocs.yml' site_name str 'Flashpoint Campaigns Documentation' nav NoneType None pages NoneType None exclude_docs NoneType None draft_docs NoneType None not_in_nav NoneType None site_url NoneType None site_description NoneType None site_author NoneType None theme Theme Theme(name='material', dirs=['C:\\\\FCCW\\\\Docs\\\\venv\\\\Lib\\\\site-packages\\\\material\\\\templates', 'C:\\\\FCCW\\\\Docs\\\\venv\\\\Lib\\\\site-packages\\\\mkdocs\\\\templates'], static_templates={'sitemap.xml', '404.html'}, name='material', locale=Locale('en'), language='en', direction=None, features=['content.tooltips', 'navigation.tabs', 'navigation.expand', 'navigation.top', 'search.suggest', 'toc.follow', 'toc.integrate'], font={'text': 'Courier Prime', 'code': 'IBM Plex Mono'}, icon=None, favicon='assets/images/favicon.png', palette=[{'scheme': 'flashpoint', 'toggle': {'icon': 'material/brightness-7', 'name': 'Switch to dark mode'}}, {'scheme': 'slate', 'primary': 'green', 'accent': 'amber', 'toggle': {'icon': 'material/brightness-4', 'name': 'Switch to light mode'}}]) docs_dir str 'C:\\\\FCCW\\\\Docs\\\\docs' site_dir str 'C:\\\\FCCW\\\\Docs\\\\site' copyright NoneType None google_analytics NoneType None dev_addr _IpAddressValue _IpAddressValue(host='127.0.0.1', port=8000) use_directory_urls bool False repo_url NoneType None repo_name NoneType None edit_uri_template NoneType None edit_uri NoneType None extra_css list ['assets/stylesheets/extra.css', 'assets/stylesheets/mil-symbols.css'] extra_javascript list [] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'meta', 'abbr', 'attr_list', 'def_list', 'md_in_html', 'admonition', 'pymdownx.critic', 'pymdownx.caret', 'pymdownx.keys', 'pymdownx.mark', 'pymdownx.tilde', 'pymdownx.smartsymbols', 'pymdownx.snippets', 'pymdownx.details', 'pymdownx.superfences', 'pymdownx.blocks.caption', 'pymdownx.tasklist', 'pymdownx.emoji', ] mdx_configs dict toc [dict], pymdownx.snippets [dict], pymdownx.tasklist [dict], pymdownx.emoji [dict] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra LegacyConfig {'generator': False, 'test_macro': '==yabba== ^^dabba^^ **doo**', 'polyfills': ['https://unpkg.com/iframe-worker/shim']} plugins PluginCollection material/tags [TagsPlugin], material/offline [OfflinePlugin], material/search [SearchPlugin], localsearch [LocalSearchPlugin], git-revision-date-localized [GitRevisionDateLocalizedPlugin], mkdocs-video [Plugin], mermaid2 [MarkdownMermaidPlugin], awesome-nav [AwesomeNavPlugin], macros [MacrosPlugin], autolinks [AutoLinksPlugin], autorefs [AutorefsPlugin], enumerate-headings [EnumerateHeadingsPlugin], exporter [Plugin], exporter-pdf [Plugin] hooks dict watch list ['C:\\\\FCCW\\\\Docs\\\\includes'] validation Validation {'nav': {'omitted_files': 20, 'not_found': 30, 'absolute_links': 20}, 'links': {'not_found': 30, 'absolute_links': 20, 'unrecognized_links': 20, 'anchors': 20}}"},{"location":"index.html#macros","title":"Macros","text":"<p>These macros have been defined programmatically for this environment (module or pluglets). </p> Variable Type Content context function (obj, var, value, e) <p>Default Mkdocs-Macro: List an object         (by default the variables)</p> macros_info function () <p>Test/debug function:         list useful documentation on the mkdocs_macro environment.</p> now function () <p>Default Mkdocs-Macro:         Get the current time (at the moment of the project build).         It returns a datetime object.          Used alone, it provides a timestamp.         To get the year use <code>now().year</code>, for the month number          <code>now().month</code>, etc.</p> fix_url function (url, r) <p>If url is relative, fix it so that it points to the docs directory.     This is necessary because relative links in markdown must be adapted     in html ('img/foo.png' =&gt; '../img/img.png').</p>"},{"location":"index.html#git-information","title":"Git Information","text":"<p>Information available on the last commit and the git repository containing the documentation project:</p> <p>e.g. <code>{{ git.message }}</code></p> Variable Type Content status bool True date datetime datetime.datetime(2025, 6, 6, 14, 19, 38, tzinfo=tzoffset(None, -14400)) short_commit str 'a2f7fcf' commit str 'a2f7fcf670d871e293cc157404d2e3957db8a160' tag str '' short_tag str '' author str 'Andrew Spearin' author_email str 'andrewspearin@gmail.com' committer str 'Andrew Spearin' committer_email str 'andrewspearin@gmail.com' date_ISO str 'Fri Jun 6 14:19:38 2025 -0400' message str 'implemented mil symbol font, created macros for mil symbols' raw str 'commit a2f7fcf670d871e293cc157404d2e3957db8a160\\nAuthor: Andrew Spearin \\nDate:   Fri Jun 6 14:19:38 2025 -0400\\n\\n    implemented mil symbol font, created macros for mil symbols' root_dir str 'C:/FCCW/Docs'"},{"location":"index.html#page-attributes","title":"Page Attributes","text":"<p>Provided by MkDocs. These attributes change for every page (the attributes shown are for this page).</p> <p>e.g. <code>{{ page.title }}</code></p> <p>See also the MkDocs documentation on the page object.</p> Variable Type Content file File src_uri = 'index.md', src_dir = 'C:\\\\FCCW\\\\Docs\\\\docs', dest_dir = 'C:\\\\FCCW\\\\Docs\\\\site', use_directory_urls = False, inclusion [InclusionLevel], name = 'index', dest_uri = 'index.html', abs_src_path = 'C:\\\\FCCW\\\\Docs\\\\docs\\\\index.md', page [Page], url = 'index.html', abs_dest_path = 'C:\\\\FCCW\\\\Docs\\\\site\\\\index.html' children NoneType None previous_page NoneType None next_page Page Page(title='Tags', url='tags.html') _Page__active bool False update_date str '2025-06-06' canonical_url NoneType None abs_url NoneType None edit_url NoneType None markdown str '# Time to RTFM!\\n\\nFor full documentation visit [mkdocs.org](https://www.mkdocs.org).\\n\\n## TODO\\n\\n1. Configure Site Settings\\n\\n    * Setup PDF export\\n    * Setup theme switch\\n    * Configure Navigation\\n    * Install Mil Symbols fonts --&gt; Build test page\\n\\n2. Convert Content\\n3. Modify and Create Content\\n\\n## Plugins\\n\\n* `enumerate-headings` - This will automatically add numbers to each section header\\n* `macros` - We can set and use variables {{ test_macro }}\\n* `live-edit` - Can edit the markdown pages in the browser! Will disable before going public.\\n* `mermaid2` - Make flowcharts and diagrams with Markdown\\n* `awesome-nav` - Reorganize the navigation\\n\\n### Testing\\n\\n1. [This link to NATO](#NATO) should take us to the [Cold War](FCCW/FCCW.html) page. _Keyword: *Should*_\\n2. We can show an enemy tank icon with `:en-tank:`, and a friendly infantry icon with `:fr-infantry:`\\nA I\\n\\n## Macro Plugin Info\\n\\n{{ macros_info() }}' _title_from_render NoneType None content NoneType None toc list [] meta dict git_revision_date_localized = 'June 6, 2025', git_revision_date_localized_hash = 'a2f7fcf670d871e293cc157404d2e3957db8a160', git_revision_date_localized_tag = '', git_revision_date_localized_raw_date = 'June 6, 2025', git_revision_date_localized_raw_datetime = 'June 6, 2025 18:19:38', git_revision_date_localized_raw_datetime-timezone = 'June 6, 2025 18:19:38 UTC', git_revision_date_localized_raw_iso_date = '2025-06-06', git_revision_date_localized_raw_iso_datetime = '2025-06-06 18:19:38', git_revision_date_localized_raw_timeago = '', git_revision_date_localized_raw_custom = '06. June 2025', git_site_revision_date_localized_hash = 'a2f7fcf670d871e293cc157404d2e3957db8a160', git_site_revision_date_localized_tag = '', git_site_revision_date_localized = 'June 6, 2025', git_site_revision_date_localized_raw_date = 'June 6, 2025', git_site_revision_date_localized_raw_datetime = 'June 6, 2025 18:19:38', git_site_revision_date_localized_raw_datetime-timezone = 'June 6, 2025 18:19:38 UTC', git_site_revision_date_localized_raw_iso_date = '2025-06-06', git_site_revision_date_localized_raw_iso_datetime = '2025-06-06 18:19:38', git_site_revision_date_localized_raw_timeago = '', git_site_revision_date_localized_raw_custom = '06. June 2025' index int 0 html NoneType None formats dict pdf [dict] theme Theme <p>To have all titles of all pages, use:</p> <pre><code>{% for page in navigation.pages %}\n- {{ page.title }}\n{% endfor %}\n</code></pre>"},{"location":"index.html#plugin-filters","title":"Plugin Filters","text":"<p>These filters are provided as a standard by the macros plugin.</p> Variable Type Content pretty function (var_list, var, var_type, content, rows, header, e) <p>Default Mkdocs-Macro: Prettify a dictionary or object          (used for environment documentation, or debugging).</p> relative_url function (path) <p>Default Mkdocs-Macro:         convert the path of any page according to MkDoc's internal logic,         into a URL relative to the current page         (implements the <code>normalize_url()</code> function from <code>mkdocs.util</code>).         Typically used to manage custom navigation:         <code>{{ page.url | relative_url }}</code>.</p>"},{"location":"index.html#builtin-jinja2-filters","title":"Builtin Jinja2 Filters","text":"<p>These filters are provided by Jinja2 as a standard.</p> <p>See also the Jinja2 documentation on builtin filters.</p> Variable Type Content abs builtin_function_or_method <p>Return the absolute value of the argument.</p> attr function (environment, obj, name) <p>Get an attribute of an object. <code>foo|attr(\"bar\")</code> works like     <code>foo.bar</code>, but returns undefined instead of falling back to <code>foo[\"bar\"]</code>     if the attribute doesn't exist.</p> batch function (value, linecount, fill_with, tmp, item) <p>A filter that batches items. It works pretty much like <code>slice</code>     just the other way round. It returns a list of lists with the     given number of items. If you provide a second parameter this     is used to fill up missing items. See this example.</p> capitalize function (s) <p>Capitalize a value. The first character will be uppercase, all others     lowercase.</p> center function (value, width) <p>Centers the value in a field of a given width.</p> count builtin_function_or_method <p>Return the number of items in a container.</p> d function (value, default_value, boolean) <p>If the value is undefined it will return the passed default value,     otherwise the value of the variable.</p> default function (value, default_value, boolean) <p>If the value is undefined it will return the passed default value,     otherwise the value of the variable.</p> dictsort function (value, case_sensitive, by, reverse, sort_func) <p>Sort a dict and yield (key, value) pairs. Python dicts may not     be in the order you want to display them in, so sort them first.</p> e function (s) <p>Replace the characters <code>&amp;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>'</code>, and <code>\"</code> in     the string with HTML-safe sequences. Use this if you need to display     text that might contain such characters in HTML.</p> escape function (s) <p>Replace the characters <code>&amp;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>'</code>, and <code>\"</code> in     the string with HTML-safe sequences. Use this if you need to display     text that might contain such characters in HTML.</p> filesizeformat function (value, binary, bytes, base, prefixes, i, prefix, unit) <p>Format the value like a 'human-readable' file size (i.e. 13 kB,     4.1 MB, 102 Bytes, etc).  Per default decimal prefixes are used (Mega,     Giga, etc.), if the second parameter is set to <code>True</code> the binary     prefixes are used (Mebi, Gibi).</p> first function (args, kwargs, b) <p>Return the first item of a sequence.</p> float function (value, default) <p>Convert the value into a floating point number. If the     conversion doesn't work it will return <code>0.0</code>. You can     override this default using the first parameter.</p> forceescape function (value) <p>Enforce HTML escaping.  This will probably double escape variables.</p> format function (value, args, kwargs) <p>Apply the given values to a <code>printf-style</code>_ format string, like     <code>string % values</code>.</p> groupby function (args, kwargs, b) <p>Group a sequence of objects by an attribute using Python's     :func:<code>itertools.groupby</code>. The attribute can use dot notation for     nested access, like <code>\"address.city\"</code>. Unlike Python's <code>groupby</code>,     the values are sorted first so only one group is returned for each     unique value.</p> indent function (s, width, first, blank, newline, rv, lines) <p>Return a copy of the string with each line indented by 4 spaces. The     first line and blank lines are not indented by default.</p> int function (value, default, base) <p>Convert the value into an integer. If the     conversion doesn't work it will return <code>0</code>. You can     override this default using the first parameter. You     can also override the default base (10) in the second     parameter, which handles input with prefixes such as     0b, 0o and 0x for bases 2, 8 and 16 respectively.     The base is ignored for decimal numbers and non-string values.</p> join function (args, kwargs, b) <p>Return a string which is the concatenation of the strings in the     sequence. The separator between elements is an empty string per     default, you can define it with the optional parameter.</p> last function (environment, seq) <p>Return the last item of a sequence.</p> length builtin_function_or_method <p>Return the number of items in a container.</p> list function (args, kwargs, b) <p>Convert the value into a list.  If it was a string the returned list     will be a list of characters.</p> lower function (s) <p>Convert a value to lowercase.</p> items function (value) <p>Return an iterator over the <code>(key, value)</code> items of a mapping.</p> map function (args, kwargs, b) <p>Applies a filter on a sequence of objects or looks up an attribute.     This is useful when dealing with lists of objects but you are really     only interested in a certain value of it.</p> min function (environment, value, case_sensitive, attribute) <p>Return the smallest item from the sequence.</p> max function (environment, value, case_sensitive, attribute) <p>Return the largest item from the sequence.</p> pprint function (value) <p>Pretty print a variable. Useful for debugging.</p> random function (context, seq) <p>Return a random item from the sequence.</p> reject function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to each object,     and rejecting the objects with the test succeeding.</p> rejectattr function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to the specified     attribute of each object, and rejecting the objects with the test     succeeding.</p> replace function (eval_ctx, s, old, new, count) <p>Return a copy of the value with all occurrences of a substring     replaced with a new one. The first argument is the substring     that should be replaced, the second is the replacement string.     If the optional third argument <code>count</code> is given, only the first     <code>count</code> occurrences are replaced.</p> reverse function (value, rv, e) <p>Reverse the object or return an iterator that iterates over it the other     way round.</p> round function (value, precision, method, func) <p>Round the number to a given precision. The first     parameter specifies the precision (default is <code>0</code>), the     second the rounding method.</p> safe function (value) <p>Mark the value as safe which means that in an environment with automatic     escaping enabled this variable will not be escaped.</p> select function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to each object,     and only selecting the objects with the test succeeding.</p> selectattr function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to the specified     attribute of each object, and only selecting the objects with the     test succeeding.</p> slice function (args, kwargs, b) <p>Slice an iterator and return a list of lists containing     those items. Useful if you want to create a div containing     three ul tags that represent columns.</p> sort function (environment, value, reverse, case_sensitive, attribute, key_func) <p>Sort an iterable using Python's :func:<code>sorted</code>.</p> string function (s) <p>Convert an object to a string if it isn't already. This preserves     a :class:<code>Markup</code> string rather than converting it back to a basic     string, so it will still be marked as safe and won't be escaped     again.</p> striptags function (value) <p>Strip SGML/XML tags and replace adjacent whitespace by one space.</p> sum function (args, kwargs, b) <p>Returns the sum of a sequence of numbers plus the value of parameter     'start' (which defaults to 0).  When the sequence is empty it returns     start.</p> title function (s, item) <p>Return a titlecased version of the value. I.e. words will start with     uppercase letters, all remaining characters are lowercase.</p> trim function (value, chars) <p>Strip leading and trailing characters, by default whitespace.</p> truncate function (env, s, length, killwords, end, leeway, result) <p>Return a truncated copy of the string. The length is specified     with the first parameter which defaults to <code>255</code>. If the second     parameter is <code>true</code> the filter will cut the text at length. Otherwise     it will discard the last word. If the text was in fact     truncated it will append an ellipsis sign (<code>\"...\"</code>). If you want a     different ellipsis sign than <code>\"...\"</code> you can specify it using the     third parameter. Strings that only exceed the length by the tolerance     margin given in the fourth parameter will not be truncated.</p> unique function (args, kwargs, b) <p>Returns a list of unique items from the given iterable.</p> upper function (s) <p>Convert a value to uppercase.</p> urlencode function (value, items) <p>Quote data for use in a URL path or query using UTF-8.</p> urlize function (eval_ctx, value, trim_url_limit, nofollow, target, rel, extra_schemes, policies, rel_parts, scheme, rv) <p>Convert URLs in text into clickable links.</p> wordcount function (s) <p>Count the words in that string.</p> wordwrap function (environment, s, width, break_long_words, wrapstring, break_on_hyphens, textwrap, line) <p>Wrap a string to the given width. Existing newlines are treated     as paragraphs to be wrapped separately.</p> xmlattr function (eval_ctx, d, autospace, items, key, value, rv) <p>Create an SGML/XML attribute string based on the items in a dict.</p> tojson function (eval_ctx, value, indent, policies, dumps, kwargs) <p>Serialize an object to a string of JSON, and mark it safe to     render in HTML. This filter is only for use in HTML documents.</p>"},{"location":"tags.html","title":"Tags","text":""},{"location":"tags.html#tags","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"FCCW/FCCW.html","title":"Flashpoint Campaigns: Cold War","text":""},{"location":"FCCW/FCCW.html#flashpoint-campaigns-cold-war","title":"Flashpoint Campaigns: Cold War","text":"<p>Here is where the documents begin.</p> <p>Let's make a navigation based on current Field Manual numbers.</p> <p>I need to come up with a system to convert existing DOC or PDF files into MD files for the purposes of this version of the docs.</p>"},{"location":"FCCW/FCCW.html#nato","title":"NATO","text":"<p>This is a test of a NATO abbreviation. It should have a hover tooltip defining it as \"North Atlantic Treaty Organization\"</p>"}]}